C:\Users\seise\PycharmProjects\cis519final\venv2\Scripts\python.exe "C:\Program Files\JetBrains\PyCharm 2021.2.2\plugins\python\helpers\pydev\pydevconsole.py" --mode=client --port=63043
import sys; print('Python %s on %s' % (sys.version, sys.platform))
sys.path.extend(['C:\\Users\\seise\\PycharmProjects\\cis519final', 'C:/Users/seise/PycharmProjects/cis519final'])
PyDev console: starting.
Python 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)] on win32
runfile('C:/Users/seise/PycharmProjects/cis519final/test.py', wdir='C:/Users/seise/PycharmProjects/cis519final')
Found 1517 images belonging to 3 classes.
2022-12-07 00:22:25.557356: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-12-07 00:22:26.570526: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1616] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 1583 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 3080 Ti, pci bus id: 0000:01:00.0, compute capability: 8.6
Modified_EfficientNet.h5
2022-12-07 00:22:43.179737: I tensorflow/stream_executor/cuda/cuda_dnn.cc:384] Loaded cuDNN version 8100
2022-12-07 00:22:46.437412: I tensorflow/stream_executor/cuda/cuda_blas.cc:1614] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.
1517/1517 [==============================] - 69s 39ms/step - loss: 0.5068 - precision: 0.6790 - recall: 0.9426 - accuracy: 0.7660 - true_negatives: 2358.0000 - true_positives: 1430.0000 - false_negatives: 87.0000 - false_positives: 676.0000 - specificity: 0.7007 - f_measure: 0.7766 - f1_score: 0.8163
['loss', 'precision', 'recall', 'accuracy', 'true_negatives', 'true_positives', 'false_negatives', 'false_positives', 'specificity', 'f_measure', 'f1_score']
[0.506848931312561, 0.6790123581886292, 0.9426499605178833, 0.7659854888916016, 2358.0, 1430.0, 87.0, 676.0, 0.700714647769928, 0.7765576839447021, 0.8163039684295654]
Modified_Inception.h5
1517/1517 [==============================] - 31s 20ms/step - loss: 0.2345 - precision: 0.6410 - recall: 0.9947 - accuracy: 0.9051 - true_negatives: 2189.0000 - true_positives: 1509.0000 - false_negatives: 8.0000 - false_positives: 845.0000 - specificity: 0.6875 - f_measure: 0.8033 - f1_score: 0.8118
['loss', 'precision', 'recall', 'accuracy', 'true_negatives', 'true_positives', 'false_negatives', 'false_positives', 'specificity', 'f_measure', 'f1_score']
[0.23448452353477478, 0.6410365104675293, 0.9947264194488525, 0.9050757884979248, 2189.0, 1509.0, 8.0, 845.0, 0.6875256896018982, 0.8032530546188354, 0.8117993474006653]
Modified_InceptionResnet.h5
1517/1517 [==============================] - 58s 36ms/step - loss: 0.1646 - precision: 0.7871 - recall: 0.9848 - accuracy: 0.9426 - true_negatives: 2630.0000 - true_positives: 1494.0000 - false_negatives: 23.0000 - false_positives: 404.0000 - specificity: 0.8092 - f_measure: 0.8784 - f1_score: 0.9005
['loss', 'precision', 'recall', 'accuracy', 'true_negatives', 'true_positives', 'false_negatives', 'false_positives', 'specificity', 'f_measure', 'f1_score']
[0.16458097100257874, 0.7871443629264832, 0.9848384857177734, 0.9426499605178833, 2630.0, 1494.0, 23.0, 404.0, 0.8092142343521118, 0.8784391283988953, 0.9004601240158081]
Modified_Mobilenet.h5
1517/1517 [==============================] - 16s 10ms/step - loss: 0.0857 - precision: 0.8523 - recall: 0.9927 - accuracy: 0.9717 - true_negatives: 2773.0000 - true_positives: 1506.0000 - false_negatives: 11.0000 - false_positives: 261.0000 - specificity: 0.8680 - f_measure: 0.9189 - f1_score: 0.9380
['loss', 'precision', 'recall', 'accuracy', 'true_negatives', 'true_positives', 'false_negatives', 'false_positives', 'specificity', 'f_measure', 'f1_score']
[0.08570388704538345, 0.852292001247406, 0.9927488565444946, 0.9716545939445496, 2773.0, 1506.0, 11.0, 261.0, 0.868004322052002, 0.9188665151596069, 0.9380346536636353]
Modified_VGG19.h5
2022-12-07 00:25:42.128771: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.14GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.129473: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.14GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.344648: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.09GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.345048: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.09GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.358899: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.15GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.359296: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.15GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.361189: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.08GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2022-12-07 00:25:42.361638: W tensorflow/core/common_runtime/bfc_allocator.cc:290] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.08GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
1517/1517 [==============================] - 12s 7ms/step - loss: 0.1602 - precision: 0.7736 - recall: 0.9868 - accuracy: 0.9387 - true_negatives: 2596.0000 - true_positives: 1497.0000 - false_negatives: 20.0000 - false_positives: 438.0000 - specificity: 0.8029 - f_measure: 0.8745 - f1_score: 0.8957
['loss', 'precision', 'recall', 'accuracy', 'true_negatives', 'true_positives', 'false_negatives', 'false_positives', 'specificity', 'f_measure', 'f1_score']
[0.16017279028892517, 0.773643434047699, 0.9868161082267761, 0.9386947751045227, 2596.0, 1497.0, 20.0, 438.0, 0.8029271960258484, 0.8744856715202332, 0.895736038684845]
Modified_Xception.h5
1517/1517 [==============================] - 14s 9ms/step - loss: 0.2076 - precision: 0.6458 - recall: 0.9941 - accuracy: 0.9222 - true_negatives: 2207.0000 - true_positives: 1508.0000 - false_negatives: 9.0000 - false_positives: 827.0000 - specificity: 0.6826 - f_measure: 0.7973 - f1_score: 0.8170
['loss', 'precision', 'recall', 'accuracy', 'true_negatives', 'true_positives', 'false_negatives', 'false_positives', 'specificity', 'f_measure', 'f1_score']
[0.20758654177188873, 0.6458244323730469, 0.9940672516822815, 0.922214925289154, 2207.0, 1508.0, 9.0, 827.0, 0.6826267838478088, 0.7972849011421204, 0.8169629573822021]
